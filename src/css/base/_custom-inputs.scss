

$inputHeight: 14px;
$inputWidth: 14px;
$inputBorderWidth: 2px;
$inputActiveScale: 4px; // optimized for even numbers

input[type="checkbox"],
input[type="radio"] {
	@include vh();

	&:focus,
	&:hover {
		+ label {
			&:before {
				border-color: $black;
			}
		}
	}

	&:active {
		+ label {
			&:before {
				transition-duration: 0;
				filter: brightness(0.8);
			}
		}
	}

	+ label {
		position: relative;
		padding: 10px;
		padding-left: 2em;
		vertical-align: middle;
		user-select: none;

		&:before {
			content: '';
			color: $color-main;
			position: absolute;
			top: 50%;
			left: 0;
			width: $inputWidth;
			height: $inputHeight;
			margin-top: -($inputHeight/2 + $inputBorderWidth);
			border: $inputBorderWidth solid $grey;
			//font-size: 18px;
			text-align: center;
		}
		&:after {
			content: '';
			background-color: $color-main;
			position: absolute;
			top: 50%;
			left: $inputBorderWidth + $inputActiveScale/2;
			width: $inputWidth - $inputActiveScale;
			height: $inputHeight -$inputActiveScale;
			margin-top: -(($inputHeight - $inputActiveScale)/2);
			transform: scale(0);
			transform-origin: 50%;
			transition: transform 200ms ease-out;
		}
	}
}

input[type="checkbox"]{
	+ label {
			&:after {

				background-color: transparent;
				top: 50%;
				left: 4px;
				width: 8px;
				height: 3px;
				margin-top: -4px;
				border-style: solid;
				border-color: $color-main;
				border-width: 0 0 3px 3px;
				border-image: none;
				transform: rotate(-45deg) scale(0);
				transition: none;
			}
	}
	&:checked {

		+ label {
			&:after {
				content: ''; //\2713';

				transform: rotate(-45deg) scale(1);
				transition: transform 200ms ease-out;
			}
		}
	}
}

input[type="radio"] {
	&:checked {
		+ label {
			&:before {
				animation: borderscale 300ms ease-in;
				background-color: $white;
			}
			&:after {
				transform: scale(1);
			}
		}
	}
	+ label {
		&:before,
		 &:after {
			border-radius: 50%;
		}
	}
}

input[type="checkbox"]{
	&:checked {
		+ label {
			&:before {
				animation: borderscale 200ms ease-in;
			}
			&:after {
				transform: rotate(-45deg) scale(1);
			}
		}
	}
}

@keyframes borderscale {
	50% {
		box-shadow: 0 0 0 4px $color-main;
	}
}






// custom-select â–¾

/* Container used for styling the custom select, the buttom class below adds the bg gradient, corners, etc. */
.custom-select {
	position: relative;
	display: inline-block;
	padding: 0;
	border: 1px solid $grey;
	background-color: $white;
}

/* This is the native select, we're making everything but the text invisible so we can see the button styles in the wrapper */
.custom-select select {
	width: 100%;
	margin: 0;
	background: none;
	border: 1px solid transparent;
	outline: none;
	/* Remove select styling */
	appearance: none;
	-moz-appearance: none;
	-webkit-appearance: none;
	/* Font size must the 16px or larger to prevent iOS page zoom on focus */
	//padding: 15px;
	line-height: 1.3;
}

/* Custom arrow sits on top of the select - could be an image, SVG, icon font, etc. or the arrow could just baked into the bg image on the select. Note this si a 2x image so it will look bad in browsers that don't support background-size. In production, you'd handle this resolution switch via media query but this is a demo. */
.custom-select::after {
	@extend %transform-center-right;
	//content: url(../img/icons/arrow-down.svg);
	content: url(data:image/svg+xml,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20width%3D%2218%22%20height%3D%2228%22%20viewBox%3D%220%200%2018%2028%22%3E%0A%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M16.797%2011.5q0%200.203-0.156%200.359l-7.281%207.281q-0.156%200.156-0.359%200.156t-0.359-0.156l-7.281-7.281q-0.156-0.156-0.156-0.359t0.156-0.359l0.781-0.781q0.156-0.156%200.359-0.156t0.359%200.156l6.141%206.141%206.141-6.141q0.156-0.156%200.359-0.156t0.359%200.156l0.781%200.781q0.156%200.156%200.156%200.359z%22%3E%3C/path%3E%0A%3C/svg%3E);

	width: 50px;
	//height: 100%;
	z-index: 1;
	background-color: transparent; //$white;
	text-align: center;
	//line-height: 70px;
	line-height: 1;
	pointer-events: none;

	// @include breakpoint($huge) {
	//   line-height: 85px;
	// }
}

/* Hover style */
// .custom-select:hover {
//   border:1px solid #888;
// }

//Focus style
.custom-select select:focus {
	//box-shadow: 0 0 0 2px $darkgrey;
	color: $black;
	outline: none;
	border-radius: 0;

	@if($old-ie) {
		outline: 2px solid $darkgrey;
	}
}

/* Set options to normal weight */
.custom-select option {
font-weight: normal;
}

/* ------------------------------------  */
/* START OF UGLY BROWSER-SPECIFIC HACKS */
/* ----------------------------------  */

/* OPERA - Pre-Blink nix the custom arrow, go with a native select button to keep it simple. Targeted via this hack http://browserhacks.com/#hack-a3f166304aafed524566bc6814e1d5c7 */
x:-o-prefocus, .custom-select::after {
	display: none;
}

 /* IE 10/11+ - This hides native dropdown button arrow so it will have the custom appearance, IE 9 and earlier get a native select - targeting media query hack via http://browserhacks.com/#hack-28f493d247a12ab654f6c3637f6978d5 - looking for better ways to achieve this targeting */
/* The second rule removes the odd blue bg color behind the text in the select button in IE 10/11 and sets the text color to match the focus style's - fix via http://stackoverflow.com/questions/17553300/change-ie-background-color-on-unopened-focused-select-box */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
	.custom-select select::-ms-expand {
		display: none;
	}
	.custom-select select:focus::-ms-value {
		background: transparent;
		color: $darkergrey;
	}
}

/* FIREFOX won't let us hide the native select arrow, so we have to make it wider than needed and clip it via overflow on the parent container. The percentage width is a fallback since FF 4+ supports calc() so we can just add a fixed amount of extra width to push the native arrow out of view. We're applying this hack across all FF versions because all the previous hacks were too fragile and complex. You might want to consider not using this hack and using the native select arrow in FF. Note this makes the menus wider than the select button because they display at the specified width and aren't clipped. Targeting hack via http://browserhacks.com/#hack-758bff81c5c32351b02e10480b5ed48e */
/* Show only the native arrow */
@-moz-document url-prefix() {
	.custom-select {
		overflow: hidden;
	}
	.custom-select select {
		width: 105%;
		width: -moz-calc(100% + 3em);
		width: calc(100% + em);

		option {
			max-width: 100%;
		}
	}
}

/* Firefox focus has odd artifacts around the text, this kills that. See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-focusring */
.custom-select select:-moz-focusring {
	color: transparent;
	text-shadow: 0 0 0 $black;
}

/* ------------------------------------  */
/*  END OF UGLY BROWSER-SPECIFIC HACKS  */
/* ------------------------------------  */

