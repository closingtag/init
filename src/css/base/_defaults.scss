/* addition resets and defaults
 * ====================================================================
 */
// faster click in WindowsPhone IE
a[href], button {
	touch-action: manipulation;
}

a > *,
[role="button"] > *,
button > * {
	pointer-events: none;
}

*:empty {
	display: none;
}

// Add a placeholder for focus events so we can manage
// both global and button styles.
%focus {
	outline-color:  $focus-color;
	outline-style:  $focus-style;
	outline-width:  $focus-width;
	outline-offset: $focus-offset;
}

// Set a focus on elements that can recieve it.
// http://www.w3.org/TR/html401/interact/forms.html#adef-tabindex
// a, area, button, input, object, select, textarea, [tabindex] {
// 	&:focus {
// 		@extend %focus;
// 	}
// }

// Suppress the focus outline on links that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
[tabindex="-1"]:focus {
	outline: none !important;
}

[role="button"] {
	cursor: pointer;
}

[aria-hidden="false"] {
	display: block;
}

[aria-hidden="true"] {
	display: none;
}

// specify the progress cursor of updating elements
[aria-busy="true"] {
	cursor: progress;
}

// specify the pointer cursor of trigger elements
[aria-controls] {
	cursor: pointer;
}

// specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements
[aria-disabled] {
	cursor: default;
}

p,
ul,
ol {
	// a {
	// 	color: $color-link;
	// }
}

ul ul,
ol ol {
	margin-top: 0;
	margin-bottom: 0;
	list-style-type: disc;
}
ol ol {
	list-style-type: inherit;
}
nav a {
	display: block;
	text-decoration: none;
}

figcaption {
	font-size: em(14px, $base-fontsize);
	line-height: 1.5;
	margin: 1em 0;
}

address {
	font-style: normal;
}

hr {
	border: {
		style: solid;
		top: none;
		left: none;
		right: none;
		bottom: 1px solid $grey;
	};
	width: 100%;
	margin: 1em auto;
}

caption {
	caption-side: bottom;
}

caption:before,
caption:after {
	content: "\0020\2014\0020";
}

th, td {
	border-bottom: 1px solid lighten($color-text, 80%);
	padding: em(4px) 0;
	text-align: left;
	vertical-align: top;
}

th {
	border-bottom: 1px solid lighten($color-text, 60%);
}

table {
	ul {
		margin: 0;
		padding-left: 1em;
	}
}

figure > img {
	display: block;
	margin: 0 auto;
}

label {
	cursor: pointer;
}

// SVG icon support fill color
svg {
	polygon, path, rect, circle, line {
		fill: inherit;
	}
}

path {
	vector-effect: non-scaling-stroke;
}

[class*="icon"] {
	fill: $color-main;
	vertical-align: inherit;
}

// svg[width="50"] {
//   width: 50px;
// }
// svg[height="50"] {
//   height: 50px;
// }
